// Comprehensive Question Database with working questions for all technologies
const quizData = {
  html: [
    // Basic Level (1-35)
    {
      question: "What does HTML stand for?",
      options: [
        "Hyper Text Markup Language",
        "High Tech Modern Language",
        "Home Tool Markup Language",
        "Hyperlink and Text Markup Language",
      ],
      correct: 0,
      difficulty: "basic",
      type: "concept",
      hint: "Think about what HTML is used for - marking up text with hyperlinks",
    },
    {
      question: "Which HTML element is used to define the structure of an HTML document?",
      options: ["<body>", "<html>", "<head>", "<div>"],
      correct: 1,
      difficulty: "basic",
      type: "syntax",
      hint: "This is the root element that contains all other elements",
    },
    {
      question: "What is the correct HTML element for the largest heading?",
      options: ["<h6>", "<h1>", "<header>", "<heading>"],
      correct: 1,
      difficulty: "basic",
      type: "syntax",
      hint: "Headings are numbered from 1 to 6, with 1 being the largest",
    },
    {
      question: "Which attribute is used to provide alternative text for an image?",
      options: ["title", "alt", "src", "description"],
      correct: 1,
      difficulty: "basic",
      type: "accessibility",
      hint: "This attribute is crucial for screen readers and accessibility",
    },
    {
      question: "What is the correct HTML element for inserting a line break?",
      options: ["<break>", "<lb>", "<br>", "<newline>"],
      correct: 2,
      difficulty: "basic",
      type: "syntax",
      hint: "This is a self-closing element that creates a line break",
    },
    {
      question: "Which HTML element is used to create an unordered list?",
      options: ["<ol>", "<ul>", "<list>", "<li>"],
      correct: 1,
      difficulty: "basic",
      type: "syntax",
      hint: "Think 'unordered list' - what would be the abbreviation?",
    },
    {
      question: "What does the DOCTYPE declaration do?",
      options: ["Defines the document type and version", "Sets the page title", "Links CSS files", "Creates a comment"],
      correct: 0,
      difficulty: "basic",
      type: "concept",
      hint: "It tells the browser what version of HTML the document is written in",
    },
    {
      question: "Which attribute is used to specify that an input field must be filled out?",
      options: ["validate", "required", "mandatory", "needed"],
      correct: 1,
      difficulty: "basic",
      type: "forms",
      hint: "This attribute makes a form field mandatory to fill",
    },
    {
      question: "What is the correct way to create a hyperlink in HTML?",
      options: ["<link href='url'>", "<a href='url'>", "<hyperlink to='url'>", "<url link='url'>"],
      correct: 1,
      difficulty: "basic",
      type: "syntax",
      hint: "Think 'anchor' - what element creates links?",
    },
    {
      question: "Which HTML element is used to define important text?",
      options: ["<important>", "<b>", "<strong>", "<i>"],
      correct: 2,
      difficulty: "basic",
      type: "semantic",
      hint: "This element has semantic meaning for importance, not just visual styling",
    },

    // Intermediate Level (11-20)
    {
      question: "What is the difference between <div> and <span> elements?",
      options: [
        "No difference",
        "<div> is block-level, <span> is inline",
        "<span> is block-level, <div> is inline",
        "They have different colors",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "concept",
      hint: "Think about how these elements behave in the document flow",
    },
    {
      question: "Which HTML5 input type is used for email validation?",
      options: [
        "<input type='mail'>",
        "<input type='email'>",
        "<input type='e-mail'>",
        "<input type='validate-email'>",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "html5",
      hint: "HTML5 introduced specific input types for validation",
    },
    {
      question: "What is the purpose of the data-* attributes in HTML5?",
      options: ["To store custom data", "To validate forms", "To create animations", "To link stylesheets"],
      correct: 0,
      difficulty: "intermediate",
      type: "html5",
      hint: "These attributes allow you to store custom information on elements",
    },
    {
      question:
        "Which attribute is used to specify that a form field should be automatically focused when the page loads?",
      options: ["focus", "autofocus", "auto-focus", "selected"],
      correct: 1,
      difficulty: "intermediate",
      type: "forms",
      hint: "This HTML5 attribute automatically sets focus to an element",
    },
    {
      question: "What is the correct way to include an external CSS file in HTML?",
      options: [
        "<css src='style.css'>",
        "<link rel='stylesheet' href='style.css'>",
        "<style src='style.css'>",
        "<include css='style.css'>",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "linking",
      hint: "This uses the link element with specific attributes",
    },
    {
      question: "Which HTML5 element is used to define a header for a document or section?",
      options: ["<head>", "<header>", "<top>", "<title>"],
      correct: 1,
      difficulty: "intermediate",
      type: "semantic",
      hint: "HTML5 introduced semantic elements for better document structure",
    },
    {
      question: "What is the purpose of the placeholder attribute in input fields?",
      options: ["Sets the default value", "Provides hint text", "Validates input", "Sets the field type"],
      correct: 1,
      difficulty: "intermediate",
      type: "forms",
      hint: "This attribute shows example text that disappears when typing",
    },
    {
      question: "Which HTML element is used to define a main content area?",
      options: ["<content>", "<main>", "<primary>", "<body>"],
      correct: 1,
      difficulty: "intermediate",
      type: "semantic",
      hint: "HTML5 introduced this semantic element for the main content",
    },
    {
      question: "What is the correct HTML5 element for displaying progress of a task?",
      options: ["<meter>", "<progress>", "<status>", "<loading>"],
      correct: 1,
      difficulty: "intermediate",
      type: "html5",
      hint: "This element shows completion progress of a task",
    },
    {
      question: "Which attribute is used to specify that an input field is read-only?",
      options: ["readonly", "disabled", "locked", "protected"],
      correct: 0,
      difficulty: "intermediate",
      type: "forms",
      hint: "This attribute prevents editing but allows the field to be submitted",
    },

    // Advanced Level (21-30)
    {
      question: "What is the purpose of the <template> element in HTML5?",
      options: [
        "Creates page templates",
        "Holds client-side content for later use",
        "Defines CSS templates",
        "Creates form templates",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "html5",
      hint: "This element holds content that is not rendered until activated by JavaScript",
    },
    {
      question:
        "Which attribute is used to specify the relationship between the current document and a linked resource?",
      options: ["relationship", "rel", "type", "connection"],
      correct: 1,
      difficulty: "advanced",
      type: "linking",
      hint: "This attribute defines how the linked resource relates to the current document",
    },
    {
      question: "What is the purpose of the 'crossorigin' attribute?",
      options: [
        "Enables cross-domain requests",
        "Handles CORS for resources",
        "Allows cross-site scripting",
        "Enables cross-platform compatibility",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "security",
      hint: "This attribute is related to Cross-Origin Resource Sharing",
    },
    {
      question: "Which element is used to define a ruby annotation for East Asian typography?",
      options: ["<ruby>", "<annotation>", "<asian>", "<pronunciation>"],
      correct: 0,
      difficulty: "advanced",
      type: "typography",
      hint: "This element is used for pronunciation guides in East Asian languages",
    },
    {
      question: "What is the purpose of the 'integrity' attribute in script and link tags?",
      options: ["Validates file integrity", "Ensures secure loading", "Prevents tampering", "All of the above"],
      correct: 3,
      difficulty: "advanced",
      type: "security",
      hint: "This attribute provides a cryptographic hash for security",
    },
    {
      question: "Which HTML5 element is used to define a scalar measurement within a known range?",
      options: ["<range>", "<meter>", "<gauge>", "<scale>"],
      correct: 1,
      difficulty: "advanced",
      type: "html5",
      hint: "This element displays measurements like disk usage or test scores",
    },
    {
      question: "What is the correct way to specify that a form should not be validated when submitted?",
      options: ["<form novalidate>", "<form validate='false'>", "<form validation='off'>", "<form skip-validation>"],
      correct: 0,
      difficulty: "advanced",
      type: "forms",
      hint: "This boolean attribute disables form validation",
    },
    {
      question: "Which attribute is used to specify the MIME type of a linked resource?",
      options: ["mime", "type", "format", "content-type"],
      correct: 1,
      difficulty: "advanced",
      type: "linking",
      hint: "This attribute helps browsers understand the resource type",
    },
    {
      question: "What is the purpose of the 'sandbox' attribute in iframes?",
      options: [
        "Creates a secure environment",
        "Restricts iframe capabilities",
        "Prevents malicious content",
        "All of the above",
      ],
      correct: 3,
      difficulty: "advanced",
      type: "security",
      hint: "This attribute applies security restrictions to iframe content",
    },
    {
      question: "Which HTML5 input type is used for color selection?",
      options: ["<input type='color'>", "<input type='colorpicker'>", "<input type='palette'>", "<input type='rgb'>"],
      correct: 0,
      difficulty: "advanced",
      type: "html5",
      hint: "HTML5 introduced a specific input type for color selection",
    },
  ],

  css: [
    // Basic Level (1-10)
    {
      question: "What does CSS stand for?",
      options: ["Computer Style Sheets", "Cascading Style Sheets", "Creative Style Sheets", "Colorful Style Sheets"],
      correct: 1,
      difficulty: "basic",
      type: "concept",
      hint: "Think about how styles 'cascade' down through elements",
    },
    {
      question: "Which CSS property is used to change the text color?",
      options: ["text-color", "color", "font-color", "text-style"],
      correct: 1,
      difficulty: "basic",
      type: "properties",
      hint: "This is one of the most basic CSS properties",
    },
    {
      question: "How do you select an element with id 'header' in CSS?",
      options: [".header", "#header", "header", "*header"],
      correct: 1,
      difficulty: "basic",
      type: "selectors",
      hint: "IDs use a specific symbol prefix in CSS selectors",
    },
    {
      question: "Which CSS property controls the spacing between elements?",
      options: ["spacing", "margin", "padding", "Both margin and padding"],
      correct: 3,
      difficulty: "basic",
      type: "box-model",
      hint: "There are two properties that control spacing in different ways",
    },
    {
      question: "What is the correct CSS syntax for making all <p> elements bold?",
      options: ["p {font-weight: bold;}", "p {text-size: bold;}", "p {font: bold;}", "p {weight: bold;}"],
      correct: 0,
      difficulty: "basic",
      type: "syntax",
      hint: "The property name includes 'weight' and the value is 'bold'",
    },
    {
      question: "Which CSS property is used to make text italic?",
      options: ["font-style: italic", "text-style: italic", "font: italic", "text-decoration: italic"],
      correct: 0,
      difficulty: "basic",
      type: "typography",
      hint: "This property controls the style of the font",
    },
    {
      question: "How do you select elements with class 'container' in CSS?",
      options: ["#container", ".container", "container", "*container"],
      correct: 1,
      difficulty: "basic",
      type: "selectors",
      hint: "Classes use a different symbol prefix than IDs",
    },
    {
      question: "Which CSS property is used to change the background color?",
      options: ["bg-color", "background-color", "color-background", "background"],
      correct: 1,
      difficulty: "basic",
      type: "properties",
      hint: "This property specifically sets the background color",
    },
    {
      question: "What does the 'z-index' property control?",
      options: ["Font size", "Element stacking order", "Border width", "Text alignment"],
      correct: 1,
      difficulty: "basic",
      type: "layout",
      hint: "This property controls which elements appear in front of others",
    },
    {
      question: "Which CSS unit is relative to the font-size of the element?",
      options: ["px", "em", "pt", "cm"],
      correct: 1,
      difficulty: "basic",
      type: "units",
      hint: "This unit scales with the element's font size",
    },

    // Intermediate Level (11-20)
    {
      question: "What is the difference between 'margin' and 'padding'?",
      options: [
        "No difference",
        "Margin is outside border, padding is inside",
        "Padding is outside border, margin is inside",
        "They affect different elements",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "box-model",
      hint: "Think about where these spaces appear relative to the element's border",
    },
    {
      question: "Which CSS property is used to create flexible layouts?",
      options: ["display: block", "display: flex", "display: inline", "display: table"],
      correct: 1,
      difficulty: "intermediate",
      type: "flexbox",
      hint: "This display value enables flexible box layout",
    },
    {
      question: "What does the 'box-sizing' property control?",
      options: ["Element size", "How width and height are calculated", "Box shadows", "Border thickness"],
      correct: 1,
      difficulty: "intermediate",
      type: "box-model",
      hint: "This property affects whether padding and border are included in dimensions",
    },
    {
      question: "Which CSS unit is relative to the viewport width?",
      options: ["vw", "vh", "vm", "vp"],
      correct: 0,
      difficulty: "intermediate",
      type: "units",
      hint: "This unit represents a percentage of the viewport width",
    },
    {
      question: "What is the purpose of the 'transform' property?",
      options: ["Changes element shape", "Applies 2D/3D transformations", "Transforms colors", "Changes element type"],
      correct: 1,
      difficulty: "intermediate",
      type: "transforms",
      hint: "This property can rotate, scale, translate, and skew elements",
    },
    {
      question: "Which CSS property is used to create animations?",
      options: ["animate", "animation", "motion", "keyframes"],
      correct: 1,
      difficulty: "intermediate",
      type: "animations",
      hint: "This property references keyframe animations",
    },
    {
      question: "What does the 'position: absolute' value do?",
      options: [
        "Positions relative to parent",
        "Positions relative to viewport",
        "Positions relative to nearest positioned ancestor",
        "Fixes position on scroll",
      ],
      correct: 2,
      difficulty: "intermediate",
      type: "positioning",
      hint: "Absolute positioning is relative to the nearest positioned ancestor",
    },
    {
      question: "Which CSS property is used to control the order of flex items?",
      options: ["flex-order", "order", "flex-sequence", "item-order"],
      correct: 1,
      difficulty: "intermediate",
      type: "flexbox",
      hint: "This property changes the visual order without affecting HTML structure",
    },
    {
      question: "What is the purpose of media queries?",
      options: ["Query databases", "Create responsive designs", "Load media files", "Control media playback"],
      correct: 1,
      difficulty: "intermediate",
      type: "responsive",
      hint: "These allow styles to adapt to different screen sizes and devices",
    },
    {
      question: "Which CSS property is used to create a grid layout?",
      options: ["display: grid", "layout: grid", "grid: true", "grid-layout: on"],
      correct: 0,
      difficulty: "intermediate",
      type: "grid",
      hint: "This display value enables CSS Grid layout",
    },

    // Advanced Level (21-30)
    {
      question: "What is the difference between 'rem' and 'em' units?",
      options: [
        "No difference",
        "rem is relative to root, em is relative to parent",
        "em is relative to root, rem is relative to parent",
        "They measure different things",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "units",
      hint: "Think about what each unit is relative to",
    },
    {
      question: "Which CSS property is used to create custom animations with keyframes?",
      options: ["@keyframes", "animation-keyframes", "keyframe-animation", "@animation"],
      correct: 0,
      difficulty: "advanced",
      type: "animations",
      hint: "This is an at-rule that defines animation sequences",
    },
    {
      question: "What is the purpose of the 'mask' property?",
      options: ["Hides elements", "Creates image masks", "Masks animations", "Protects elements"],
      correct: 1,
      difficulty: "advanced",
      type: "masking",
      hint: "This property uses images or gradients to hide parts of elements",
    },
    {
      question: "Which CSS property is used to control subgrid behavior?",
      options: ["subgrid", "grid-subgrid", "display: subgrid", "grid-template: subgrid"],
      correct: 0,
      difficulty: "advanced",
      type: "grid",
      hint: "This value allows grid items to participate in their parent's grid",
    },
    {
      question: "What does the 'backdrop-filter' property do?",
      options: ["Filters backgrounds", "Applies effects behind elements", "Filters images", "Creates backdrops"],
      correct: 1,
      difficulty: "advanced",
      type: "filters",
      hint: "This property applies effects to the area behind an element",
    },
    {
      question: "Which CSS property is used to create scroll-driven animations?",
      options: ["scroll-timeline", "animation-timeline", "scroll-animation", "@scroll-timeline"],
      correct: 0,
      difficulty: "advanced",
      type: "scroll-animations",
      hint: "This property links animations to scroll progress",
    },
    {
      question: "What is the purpose of the 'contain' property?",
      options: ["Contains elements", "Optimizes rendering", "Contains styles", "Contains layouts"],
      correct: 1,
      difficulty: "advanced",
      type: "performance",
      hint: "This property provides performance hints to browsers",
    },
    {
      question: "Which CSS property is used to control text selection?",
      options: ["user-select", "text-select", "selection", "select-text"],
      correct: 0,
      difficulty: "advanced",
      type: "interaction",
      hint: "This property controls whether users can select text",
    },
    {
      question: "What does the 'aspect-ratio' property control?",
      options: ["Image ratios", "Element width-to-height ratio", "Screen ratios", "Font ratios"],
      correct: 1,
      difficulty: "advanced",
      type: "dimensions",
      hint: "This property maintains a specific width-to-height ratio",
    },
    {
      question: "Which CSS property is used to create sticky positioning?",
      options: ["position: sticky", "position: fixed", "sticky: true", "position: adhesive"],
      correct: 0,
      difficulty: "advanced",
      type: "positioning",
      hint: "This positioning value combines relative and fixed positioning",
    },
  ],

  javascript: [
    // Basic Level (1-10)
    {
      question: "Which method is used to add an element to the end of an array?",
      options: ["push()", "add()", "append()", "insert()"],
      correct: 0,
      difficulty: "basic",
      type: "arrays",
      hint: "This method 'pushes' elements onto the end of an array",
    },
    {
      question: "What is the correct way to declare a variable in JavaScript?",
      options: ["variable x = 5", "var x = 5", "v x = 5", "declare x = 5"],
      correct: 1,
      difficulty: "basic",
      type: "variables",
      hint: "This keyword has been used since the early days of JavaScript",
    },
    {
      question: "Which operator is used to compare both value and type?",
      options: ["==", "===", "=", "!="],
      correct: 1,
      difficulty: "basic",
      type: "operators",
      hint: "This operator uses three equal signs for strict comparison",
    },
    {
      question: "What does DOM stand for?",
      options: ["Document Object Model", "Data Object Management", "Dynamic Object Model", "Document Oriented Model"],
      correct: 0,
      difficulty: "basic",
      type: "concept",
      hint: "This represents the structure of HTML documents as objects",
    },
    {
      question: "Which method is used to remove the last element from an array?",
      options: ["pop()", "remove()", "delete()", "splice()"],
      correct: 0,
      difficulty: "basic",
      type: "arrays",
      hint: "This method 'pops' the last element off an array",
    },
    {
      question: "What is the result of '2' + 2 in JavaScript?",
      options: ["4", "'22'", "22", "Error"],
      correct: 1,
      difficulty: "basic",
      type: "type-coercion",
      hint: "JavaScript converts the number to a string and concatenates",
    },
    {
      question: "Which keyword is used to create a function in JavaScript?",
      options: ["function", "func", "def", "create"],
      correct: 0,
      difficulty: "basic",
      type: "functions",
      hint: "This keyword is used to define functions in JavaScript",
    },
    {
      question: "What is the purpose of the 'this' keyword?",
      options: ["Refers to current object", "Creates a new object", "Defines a variable", "Imports a module"],
      correct: 0,
      difficulty: "basic",
      type: "context",
      hint: "This keyword refers to the object that owns the current code",
    },
    {
      question: "Which method is used to convert a string to lowercase?",
      options: ["toLowerCase()", "lower()", "toLower()", "lowerCase()"],
      correct: 0,
      difficulty: "basic",
      type: "strings",
      hint: "This method converts all characters to lowercase",
    },
    {
      question: "What is a closure in JavaScript?",
      options: [
        "A way to close functions",
        "Function with access to outer scope",
        "A loop structure",
        "An error handling method",
      ],
      correct: 1,
      difficulty: "basic",
      type: "closures",
      hint: "This allows inner functions to access outer function variables",
    },

    // Intermediate Level (11-20)
    {
      question: "What is the difference between 'let' and 'var'?",
      options: [
        "No difference",
        "let has block scope, var has function scope",
        "var has block scope, let has function scope",
        "let is faster than var",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "variables",
      hint: "Think about where these variables can be accessed",
    },
    {
      question: "Which method is used to create a new array with all elements that pass a test?",
      options: ["filter()", "map()", "reduce()", "find()"],
      correct: 0,
      difficulty: "intermediate",
      type: "arrays",
      hint: "This method 'filters' elements based on a condition",
    },
    {
      question: "What does the 'async' keyword do?",
      options: [
        "Makes functions run faster",
        "Makes functions return promises",
        "Makes functions synchronous",
        "Makes functions run in parallel",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "async",
      hint: "This keyword is used with asynchronous functions",
    },
    {
      question: "Which method is used to combine all elements of an array into a string?",
      options: ["combine()", "join()", "merge()", "concat()"],
      correct: 1,
      difficulty: "intermediate",
      type: "arrays",
      hint: "This method 'joins' array elements with a separator",
    },
    {
      question: "What is event bubbling?",
      options: [
        "Events moving up the DOM tree",
        "Events moving down the DOM tree",
        "Events being cancelled",
        "Events being duplicated",
      ],
      correct: 0,
      difficulty: "intermediate",
      type: "events",
      hint: "Events 'bubble' up from child to parent elements",
    },
    {
      question: "Which method is used to execute a function after a specified delay?",
      options: ["delay()", "setTimeout()", "wait()", "pause()"],
      correct: 1,
      difficulty: "intermediate",
      type: "timing",
      hint: "This method sets a timer for function execution",
    },
    {
      question: "What does the 'spread operator' (...) do?",
      options: [
        "Spreads elements of an iterable",
        "Creates new objects",
        "Deletes array elements",
        "Combines functions",
      ],
      correct: 0,
      difficulty: "intermediate",
      type: "es6",
      hint: "This operator 'spreads' elements from arrays or objects",
    },
    {
      question: "Which method is used to find the first element that matches a condition?",
      options: ["search()", "find()", "locate()", "match()"],
      correct: 1,
      difficulty: "intermediate",
      type: "arrays",
      hint: "This method finds the first matching element",
    },
    {
      question: "What is destructuring in JavaScript?",
      options: [
        "Breaking objects",
        "Extracting values from arrays/objects",
        "Deleting properties",
        "Creating new structures",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "es6",
      hint: "This allows unpacking values from arrays or properties from objects",
    },
    {
      question: "Which method is used to check if an array includes a certain element?",
      options: ["contains()", "includes()", "has()", "exists()"],
      correct: 1,
      difficulty: "intermediate",
      type: "arrays",
      hint: "This method checks if an array includes a specific value",
    },

    // Advanced Level (21-30)
    {
      question: "What is the difference between 'call' and 'apply' methods?",
      options: [
        "No difference",
        "call takes individual arguments, apply takes an array",
        "apply takes individual arguments, call takes an array",
        "They work on different objects",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "functions",
      hint: "Think about how arguments are passed to these methods",
    },
    {
      question: "What is a Promise in JavaScript?",
      options: [
        "A guarantee",
        "An object representing eventual completion of an async operation",
        "A type of function",
        "A loop structure",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "promises",
      hint: "This represents a value that may be available now, later, or never",
    },
    {
      question: "What does the 'bind' method do?",
      options: [
        "Combines functions",
        "Creates a new function with a specific 'this' value",
        "Binds variables",
        "Connects objects",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "functions",
      hint: "This method creates a new function with a bound context",
    },
    {
      question: "What is the purpose of 'use strict'?",
      options: [
        "Makes code run faster",
        "Enables strict mode for better error checking",
        "Makes code more secure",
        "Enables new features",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "strict-mode",
      hint: "This directive enables stricter parsing and error handling",
    },
    {
      question: "What is a generator function?",
      options: [
        "A function that generates code",
        "A function that can be paused and resumed",
        "A function that creates objects",
        "A function that runs automatically",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "generators",
      hint: "These functions can yield multiple values over time",
    },
    {
      question: "What does the 'Symbol' primitive type represent?",
      options: ["Mathematical symbols", "Unique identifiers", "String symbols", "Numeric symbols"],
      correct: 1,
      difficulty: "advanced",
      type: "symbols",
      hint: "This primitive type creates unique identifiers",
    },
    {
      question: "What is the purpose of WeakMap?",
      options: [
        "A weak version of Map",
        "A Map with weak references to keys",
        "A Map for small data",
        "A temporary Map",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "collections",
      hint: "This allows garbage collection of keys when no other references exist",
    },
    {
      question: "What is a Proxy in JavaScript?",
      options: [
        "A network proxy",
        "An object that intercepts operations on another object",
        "A copy of an object",
        "A reference to an object",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "proxy",
      hint: "This allows you to intercept and customize operations on objects",
    },
    {
      question: "What does the 'Reflect' object provide?",
      options: [
        "Object reflection",
        "Methods for interceptable JavaScript operations",
        "Object mirroring",
        "Object copying",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "reflect",
      hint: "This provides methods for interceptable JavaScript operations",
    },
    {
      question: "What is the purpose of the 'finally' block?",
      options: [
        "Handles final errors",
        "Executes code regardless of try/catch outcome",
        "Finalizes variables",
        "Ends the program",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "error-handling",
      hint: "This block always executes, whether an error occurs or not",
    },
  ],

  react: [
    // Basic Level (1-10)
    {
      question: "What is JSX in React?",
      options: ["JavaScript XML", "Java Syntax Extension", "JSON XML", "JavaScript Extension"],
      correct: 0,
      difficulty: "basic",
      type: "jsx",
      hint: "JSX allows you to write HTML-like syntax in JavaScript",
    },
    {
      question: "Which method is used to update state in a React component?",
      options: ["updateState()", "setState()", "changeState()", "modifyState()"],
      correct: 1,
      difficulty: "basic",
      type: "state",
      hint: "This method is used in class components to update state",
    },
    {
      question: "What is a React Hook?",
      options: [
        "A way to connect components",
        "Functions that let you use state in functional components",
        "A debugging tool",
        "A routing method",
      ],
      correct: 1,
      difficulty: "basic",
      type: "hooks",
      hint: "Hooks allow functional components to use state and lifecycle features",
    },
    {
      question: "Which Hook is used to manage state in functional components?",
      options: ["useEffect", "useState", "useContext", "useReducer"],
      correct: 1,
      difficulty: "basic",
      type: "hooks",
      hint: "This Hook returns a state variable and a function to update it",
    },
    {
      question: "What is the purpose of props in React?",
      options: ["To style components", "To pass data between components", "To handle events", "To manage state"],
      correct: 1,
      difficulty: "basic",
      type: "props",
      hint: "Props are used to pass data from parent to child components",
    },
    {
      question: "Which method is called when a component is first created?",
      options: ["componentDidMount", "componentWillMount", "constructor", "render"],
      correct: 0,
      difficulty: "basic",
      type: "lifecycle",
      hint: "This lifecycle method runs after the component is mounted to the DOM",
    },
    {
      question: "What is the virtual DOM?",
      options: [
        "A copy of the real DOM",
        "A JavaScript representation of the DOM",
        "A faster version of DOM",
        "A debugging tool",
      ],
      correct: 1,
      difficulty: "basic",
      type: "virtual-dom",
      hint: "This is React's in-memory representation of the real DOM",
    },
    {
      question: "How do you handle events in React?",
      options: ["Using event handlers", "Using SyntheticEvents", "Using DOM events", "All of the above"],
      correct: 1,
      difficulty: "basic",
      type: "events",
      hint: "React wraps native events in its own event system",
    },
    {
      question: "What is the purpose of keys in React lists?",
      options: ["For styling", "To help React identify which items have changed", "For security", "For performance"],
      correct: 1,
      difficulty: "basic",
      type: "keys",
      hint: "Keys help React efficiently update lists when items change",
    },
    {
      question: "Which Hook is used for side effects?",
      options: ["useState", "useEffect", "useContext", "useMemo"],
      correct: 1,
      difficulty: "basic",
      type: "hooks",
      hint: "This Hook handles side effects like API calls and subscriptions",
    },

    // Intermediate Level (11-20)
    {
      question: "What is the difference between controlled and uncontrolled components?",
      options: [
        "No difference",
        "Controlled components have React-managed state",
        "Uncontrolled components have React-managed state",
        "They handle different events",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "forms",
      hint: "Think about where the form data is stored and managed",
    },
    {
      question: "What is React Context used for?",
      options: ["Styling components", "Sharing data across component tree", "Handling events", "Managing routes"],
      correct: 1,
      difficulty: "intermediate",
      type: "context",
      hint: "Context provides a way to pass data through the component tree without props",
    },
    {
      question: "What is the purpose of useCallback Hook?",
      options: ["To call functions", "To memoize functions", "To create callbacks", "To handle events"],
      correct: 1,
      difficulty: "intermediate",
      type: "hooks",
      hint: "This Hook returns a memoized version of a callback function",
    },
    {
      question: "What does useMemo Hook do?",
      options: ["Manages memory", "Memoizes expensive calculations", "Creates memos", "Handles memory leaks"],
      correct: 1,
      difficulty: "intermediate",
      type: "hooks",
      hint: "This Hook memoizes the result of expensive computations",
    },
    {
      question: "What is prop drilling?",
      options: [
        "Drilling holes in props",
        "Passing props through multiple component levels",
        "Creating new props",
        "Deleting props",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "props",
      hint: "This occurs when props are passed through many component layers",
    },
    {
      question: "What is the purpose of React.memo?",
      options: ["To create memos", "To prevent unnecessary re-renders", "To manage memory", "To create components"],
      correct: 1,
      difficulty: "intermediate",
      type: "optimization",
      hint: "This higher-order component prevents re-renders when props haven't changed",
    },
    {
      question: "What is a Higher-Order Component (HOC)?",
      options: [
        "A component at the top",
        "A function that takes a component and returns a new component",
        "A large component",
        "A component with high priority",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "hoc",
      hint: "HOCs are functions that enhance components with additional functionality",
    },
    {
      question: "What is the purpose of useReducer Hook?",
      options: ["To reduce code", "To manage complex state logic", "To reduce renders", "To reduce memory usage"],
      correct: 1,
      difficulty: "intermediate",
      type: "hooks",
      hint: "This Hook is useful for managing complex state with multiple sub-values",
    },
    {
      question: "What are React Fragments used for?",
      options: [
        "To break components",
        "To group elements without extra DOM nodes",
        "To create fragments",
        "To handle errors",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "fragments",
      hint: "Fragments let you group children without adding extra nodes to the DOM",
    },
    {
      question: "What is the purpose of useRef Hook?",
      options: ["To create references", "To access DOM elements directly", "To reference components", "To create refs"],
      correct: 1,
      difficulty: "intermediate",
      type: "hooks",
      hint: "This Hook provides a way to access DOM elements or store mutable values",
    },

    // Advanced Level (21-30)
    {
      question: "What is React Suspense used for?",
      options: [
        "To suspend components",
        "To handle loading states for async components",
        "To pause rendering",
        "To create suspense",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "suspense",
      hint: "Suspense lets components wait for something before rendering",
    },
    {
      question: "What is the purpose of Error Boundaries?",
      options: [
        "To create boundaries",
        "To catch JavaScript errors in component tree",
        "To handle network errors",
        "To prevent errors",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "error-boundaries",
      hint: "These components catch errors anywhere in their child component tree",
    },
    {
      question: "What is React Concurrent Mode?",
      options: [
        "Running multiple React apps",
        "A set of features for better user experience",
        "Concurrent rendering",
        "Parallel processing",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "concurrent",
      hint: "This mode helps React apps stay responsive by rendering work in chunks",
    },
    {
      question: "What is the purpose of useLayoutEffect?",
      options: [
        "To handle layouts",
        "To run effects synchronously after DOM mutations",
        "To create layouts",
        "To measure layouts",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "hooks",
      hint: "This Hook runs synchronously after all DOM mutations",
    },
    {
      question: "What is React Server Components?",
      options: [
        "Components on server",
        "Components that render on the server",
        "Server-side React",
        "Backend components",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "server-components",
      hint: "These components render on the server and send HTML to the client",
    },
    {
      question: "What is the purpose of useImperativeHandle?",
      options: [
        "To handle imperatives",
        "To customize the instance value exposed by ref",
        "To create handles",
        "To manage imperative code",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "hooks",
      hint: "This Hook customizes the instance value that is exposed to parent components",
    },
    {
      question: "What is React Fiber?",
      options: [
        "A type of component",
        "React's reconciliation algorithm",
        "A networking library",
        "A performance tool",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "fiber",
      hint: "This is React's reconciliation algorithm that enables incremental rendering",
    },
    {
      question: "What is the purpose of React.lazy?",
      options: [
        "To make components lazy",
        "To enable code splitting for components",
        "To delay rendering",
        "To create lazy loading",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "code-splitting",
      hint: "This function enables dynamic imports for components",
    },
    {
      question: "What is React Profiler used for?",
      options: [
        "To profile users",
        "To measure performance of React components",
        "To create profiles",
        "To debug components",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "profiler",
      hint: "This tool helps identify performance bottlenecks in React applications",
    },
    {
      question: "What is the purpose of React.StrictMode?",
      options: [
        "To make React strict",
        "To highlight potential problems in development",
        "To enforce rules",
        "To improve performance",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "strict-mode",
      hint: "This component helps identify unsafe lifecycles and deprecated APIs",
    },
  ],

  nextjs: [
    // Basic Level (1-10)
    {
      question: "What is Next.js?",
      options: ["A React framework", "A JavaScript library", "A CSS framework", "A database"],
      correct: 0,
      difficulty: "basic",
      type: "concept",
      hint: "Next.js is built on top of React and provides additional features",
    },
    {
      question: "What is Server-Side Rendering (SSR)?",
      options: [
        "Rendering on the client",
        "Rendering HTML on the server",
        "Rendering CSS on server",
        "Rendering JavaScript on server",
      ],
      correct: 1,
      difficulty: "basic",
      type: "ssr",
      hint: "SSR generates HTML on the server before sending to the client",
    },
    {
      question: "Which folder contains pages in a Next.js application?",
      options: ["src/", "pages/", "components/", "views/"],
      correct: 1,
      difficulty: "basic",
      type: "file-structure",
      hint: "This folder name directly corresponds to routes in your application",
    },
    {
      question: "What is Static Site Generation (SSG)?",
      options: [
        "Generating sites dynamically",
        "Pre-building HTML at build time",
        "Generating CSS statically",
        "Creating static files",
      ],
      correct: 1,
      difficulty: "basic",
      type: "ssg",
      hint: "SSG creates HTML pages at build time rather than request time",
    },
    {
      question: "Which function is used for SSG in Next.js?",
      options: ["getServerSideProps", "getStaticProps", "getInitialProps", "getProps"],
      correct: 1,
      difficulty: "basic",
      type: "data-fetching",
      hint: "This function runs at build time to generate static pages",
    },
    {
      question: "What is the purpose of _app.js in Next.js?",
      options: ["Main application component", "Configuration file", "Routing file", "Style file"],
      correct: 0,
      difficulty: "basic",
      type: "app-structure",
      hint: "This file wraps all pages and persists layout between page changes",
    },
    {
      question: "How do you create dynamic routes in Next.js?",
      options: [
        "Using brackets [param]",
        "Using parentheses (param)",
        "Using curly braces {param}",
        "Using angle brackets <param>",
      ],
      correct: 0,
      difficulty: "basic",
      type: "routing",
      hint: "Dynamic route segments are wrapped in square brackets",
    },
    {
      question: "What is the purpose of next/link?",
      options: ["To link CSS files", "For client-side navigation", "To link external sites", "To create hyperlinks"],
      correct: 1,
      difficulty: "basic",
      type: "navigation",
      hint: "This component enables fast client-side navigation between pages",
    },
    {
      question: "Which command is used to start a Next.js development server?",
      options: ["npm start", "npm run dev", "npm run start", "next start"],
      correct: 1,
      difficulty: "basic",
      type: "commands",
      hint: "This command starts the development server with hot reloading",
    },
    {
      question: "What is the purpose of next/image?",
      options: ["To create images", "For optimized image loading", "To edit images", "To compress images"],
      correct: 1,
      difficulty: "basic",
      type: "optimization",
      hint: "This component provides automatic image optimization and lazy loading",
    },

    // Intermediate Level (11-20)
    {
      question: "What is Incremental Static Regeneration (ISR)?",
      options: [
        "Regenerating all pages",
        "Updating static pages after build",
        "Incremental building",
        "Static page updates",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "isr",
      hint: "ISR allows you to update static pages without rebuilding the entire site",
    },
    {
      question: "Which function is used for SSR in Next.js?",
      options: ["getStaticProps", "getServerSideProps", "getInitialProps", "getProps"],
      correct: 1,
      difficulty: "intermediate",
      type: "data-fetching",
      hint: "This function runs on every request to generate pages server-side",
    },
    {
      question: "What is the purpose of getStaticPaths?",
      options: [
        "To get static files",
        "To define dynamic routes for SSG",
        "To create paths",
        "To generate static content",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "data-fetching",
      hint: "This function specifies which dynamic routes should be pre-rendered",
    },
    {
      question: "How do you create API routes in Next.js?",
      options: ["In pages/api/ folder", "In api/ folder", "In routes/ folder", "In server/ folder"],
      correct: 0,
      difficulty: "intermediate",
      type: "api-routes",
      hint: "API routes are created in a specific subfolder of the pages directory",
    },
    {
      question: "What is the purpose of next.config.js?",
      options: ["Page configuration", "Next.js configuration file", "API configuration", "Build configuration"],
      correct: 1,
      difficulty: "intermediate",
      type: "configuration",
      hint: "This file allows you to customize Next.js behavior and settings",
    },
    {
      question: "What is middleware in Next.js?",
      options: [
        "Code that runs between requests",
        "Code that runs before requests",
        "Code that runs after requests",
        "Code that runs during requests",
      ],
      correct: 1,
      difficulty: "intermediate",
      type: "middleware",
      hint: "Middleware runs before a request is completed",
    },
    {
      question: "How do you implement authentication in Next.js?",
      options: ["Using NextAuth.js", "Using built-in auth", "Using custom auth", "All of the above"],
      correct: 3,
      difficulty: "intermediate",
      type: "authentication",
      hint: "Next.js supports various authentication methods and libraries",
    },
    {
      question: "What is the purpose of _document.js?",
      options: ["Document configuration", "Custom HTML document structure", "Documentation file", "Document styling"],
      correct: 1,
      difficulty: "intermediate",
      type: "app-structure",
      hint: "This file allows you to customize the HTML document structure",
    },
    {
      question: "How do you handle environment variables in Next.js?",
      options: ["Using .env files", "Using process.env", "Using NEXT_PUBLIC_ prefix", "All of the above"],
      correct: 3,
      difficulty: "intermediate",
      type: "environment",
      hint: "Next.js has built-in support for environment variables with specific conventions",
    },
    {
      question: "What is the purpose of next/head?",
      options: ["To create headers", "To modify HTML head", "To add headings", "To create navigation"],
      correct: 1,
      difficulty: "intermediate",
      type: "head-management",
      hint: "This component allows you to modify the HTML head from any component",
    },

    // Advanced Level (21-30)
    {
      question: "What is Edge Runtime in Next.js?",
      options: ["Runtime at the edge", "Lightweight JavaScript runtime", "Edge computing", "Runtime optimization"],
      correct: 1,
      difficulty: "advanced",
      type: "edge-runtime",
      hint: "This runtime is optimized for edge environments with faster cold starts",
    },
    {
      question: "What are React Server Components in Next.js?",
      options: [
        "Components on server",
        "Components that render on server",
        "Server-side components",
        "Backend components",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "server-components",
      hint: "These components run on the server and can directly access backend resources",
    },
    {
      question: "What is the App Router in Next.js 13+?",
      options: ["New routing system", "Application router", "App-based routing", "Router for apps"],
      correct: 0,
      difficulty: "advanced",
      type: "app-router",
      hint: "This is the new routing system introduced in Next.js 13",
    },
    {
      question: "What is Streaming in Next.js?",
      options: ["Video streaming", "Sending UI in chunks", "Data streaming", "Content streaming"],
      correct: 1,
      difficulty: "advanced",
      type: "streaming",
      hint: "This allows you to send UI to the client in chunks as it's rendered",
    },
    {
      question: "What are Server Actions in Next.js?",
      options: ["Actions on server", "Server-side form handling", "Backend actions", "API actions"],
      correct: 1,
      difficulty: "advanced",
      type: "server-actions",
      hint: "These allow you to handle form submissions and mutations on the server",
    },
    {
      question: "What is the purpose of loading.js in App Router?",
      options: ["Loading configuration", "Loading UI component", "Loading scripts", "Loading data"],
      correct: 1,
      difficulty: "advanced",
      type: "app-router",
      hint: "This file creates loading UI that shows while a page is being rendered",
    },
    {
      question: "What is Partial Prerendering in Next.js?",
      options: [
        "Partial page rendering",
        "Combining static and dynamic content",
        "Incomplete rendering",
        "Selective rendering",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "partial-prerendering",
      hint: "This feature combines static and dynamic content in a single page",
    },
    {
      question: "What are Route Handlers in Next.js App Router?",
      options: ["Route management", "API endpoints in App Router", "Route configuration", "Route processing"],
      correct: 1,
      difficulty: "advanced",
      type: "route-handlers",
      hint: "These replace API routes in the new App Router system",
    },
    {
      question: "What is the purpose of error.js in App Router?",
      options: ["Error logging", "Error boundary component", "Error configuration", "Error handling"],
      correct: 1,
      difficulty: "advanced",
      type: "app-router",
      hint: "This file creates error boundaries for route segments",
    },
    {
      question: "What is Turbopack in Next.js?",
      options: ["Package manager", "Fast bundler for Next.js", "Optimization tool", "Build system"],
      correct: 1,
      difficulty: "advanced",
      type: "turbopack",
      hint: "This is a fast bundler written in Rust for Next.js development",
    },
  ],

  npm: [
    // Basic Level (1-10)
    {
      question: "What does NPM stand for?",
      options: ["Node Package Manager", "New Package Manager", "Node Program Manager", "Network Package Manager"],
      correct: 0,
      difficulty: "basic",
      type: "concept",
      hint: "NPM is the package manager for Node.js",
    },
    {
      question: "Which command is used to install a package?",
      options: ["npm get", "npm install", "npm add", "npm download"],
      correct: 1,
      difficulty: "basic",
      type: "commands",
      hint: "This command downloads and installs packages from the npm registry",
    },
    {
      question: "What file contains project dependencies?",
      options: ["dependencies.json", "package.json", "npm.json", "config.json"],
      correct: 1,
      difficulty: "basic",
      type: "files",
      hint: "This JSON file contains metadata about the project and its dependencies",
    },
    {
      question: "Which command initializes a new npm project?",
      options: ["npm start", "npm init", "npm create", "npm new"],
      correct: 1,
      difficulty: "basic",
      type: "commands",
      hint: "This command creates a new package.json file",
    },
    {
      question: "What is the difference between dependencies and devDependencies?",
      options: [
        "No difference",
        "dependencies for production, devDependencies for development",
        "devDependencies for production, dependencies for development",
        "They install different packages",
      ],
      correct: 1,
      difficulty: "basic",
      type: "dependencies",
      hint: "Think about when each type of dependency is needed",
    },
    {
      question: "Which command uninstalls a package?",
      options: ["npm remove", "npm uninstall", "npm delete", "npm rm"],
      correct: 1,
      difficulty: "basic",
      type: "commands",
      hint: "This command removes packages from your project",
    },
    {
      question: "What does 'npm start' do?",
      options: ["Starts npm", "Runs the start script", "Starts the server", "Initializes project"],
      correct: 1,
      difficulty: "basic",
      type: "scripts",
      hint: "This command runs the script defined in the 'start' field",
    },
    {
      question: "Which flag installs a package globally?",
      options: ["-g", "--global", "-global", "Both -g and --global"],
      correct: 3,
      difficulty: "basic",
      type: "flags",
      hint: "Global packages are available system-wide",
    },
    {
      question: "What is the npm registry?",
      options: ["A database of packages", "A package repository", "A package index", "All of the above"],
      correct: 3,
      difficulty: "basic",
      type: "registry",
      hint: "The registry is where npm packages are stored and distributed",
    },
    {
      question: "Which command shows installed packages?",
      options: ["npm show", "npm list", "npm packages", "npm installed"],
      correct: 1,
      difficulty: "basic",
      type: "commands",
      hint: "This command displays the dependency tree",
    },

    // Intermediate Level (11-20)
    {
      question: "What is semantic versioning (semver)?",
      options: ["Version semantics", "MAJOR.MINOR.PATCH versioning", "Semantic version control", "Version naming"],
      correct: 1,
      difficulty: "intermediate",
      type: "versioning",
      hint: "This versioning scheme uses three numbers separated by dots",
    },
    {
      question: "What does the ^ symbol mean in package versions?",
      options: ["Exact version", "Compatible version changes", "Latest version", "Beta version"],
      correct: 1,
      difficulty: "intermediate",
      type: "versioning",
      hint: "This symbol allows compatible version updates",
    },
    {
      question: "What is the purpose of package-lock.json?",
      options: ["Locks packages", "Ensures consistent installs", "Prevents updates", "Secures packages"],
      correct: 1,
      difficulty: "intermediate",
      type: "lock-file",
      hint: "This file ensures everyone gets the same dependency versions",
    },
    {
      question: "Which command updates packages to their latest versions?",
      options: ["npm upgrade", "npm update", "npm latest", "npm refresh"],
      correct: 1,
      difficulty: "intermediate",
      type: "commands",
      hint: "This command updates packages within their version ranges",
    },
    {
      question: "What is npx used for?",
      options: ["Installing packages", "Executing packages", "Updating packages", "Publishing packages"],
      correct: 1,
      difficulty: "intermediate",
      type: "npx",
      hint: "This tool executes packages without installing them globally",
    },
    {
      question: "How do you install a specific version of a package?",
      options: [
        "npm install package@version",
        "npm install package:version",
        "npm install package=version",
        "npm install package#version",
      ],
      correct: 0,
      difficulty: "intermediate",
      type: "commands",
      hint: "Use the @ symbol to specify a version",
    },
    {
      question: "What is the purpose of .npmrc file?",
      options: ["npm configuration", "npm resources", "npm registry config", "npm runtime config"],
      correct: 0,
      difficulty: "intermediate",
      type: "configuration",
      hint: "This file contains npm configuration settings",
    },
    {
      question: "Which command shows outdated packages?",
      options: ["npm old", "npm outdated", "npm check", "npm status"],
      correct: 1,
      difficulty: "intermediate",
      type: "commands",
      hint: "This command shows which packages have newer versions available",
    },
    {
      question: "What does 'npm audit' do?",
      options: ["Audits code", "Checks for security vulnerabilities", "Reviews packages", "Validates dependencies"],
      correct: 1,
      difficulty: "intermediate",
      type: "security",
      hint: "This command scans for known security vulnerabilities",
    },
    {
      question: "How do you save a package as a dev dependency?",
      options: ["--save-dev", "--dev", "-D", "Both --save-dev and -D"],
      correct: 3,
      difficulty: "intermediate",
      type: "flags",
      hint: "Dev dependencies are only needed during development",
    },

    // Advanced Level (21-30)
    {
      question: "What is npm workspaces?",
      options: [
        "Working directories",
        "Managing multiple packages in one repo",
        "npm workspace tool",
        "Package workspaces",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "workspaces",
      hint: "This feature helps manage monorepos with multiple packages",
    },
    {
      question: "What is the purpose of peerDependencies?",
      options: [
        "Dependencies for peers",
        "Dependencies provided by parent project",
        "Shared dependencies",
        "Optional dependencies",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "dependencies",
      hint: "These dependencies should be provided by the consuming project",
    },
    {
      question: "How do you publish a package to npm?",
      options: ["npm publish", "npm deploy", "npm release", "npm upload"],
      correct: 0,
      difficulty: "advanced",
      type: "publishing",
      hint: "This command uploads your package to the npm registry",
    },
    {
      question: "What is npm shrinkwrap?",
      options: ["Shrinks packages", "Locks dependency versions", "Compresses packages", "Reduces package size"],
      correct: 1,
      difficulty: "advanced",
      type: "shrinkwrap",
      hint: "This creates a locked-down version of dependencies",
    },
    {
      question: "What are npm scripts hooks?",
      options: ["Script hooks", "Pre and post script execution", "Script callbacks", "Script events"],
      correct: 1,
      difficulty: "advanced",
      type: "scripts",
      hint: "These run automatically before or after other scripts",
    },
    {
      question: "What is the purpose of bundledDependencies?",
      options: [
        "Bundled packages",
        "Dependencies included in package tarball",
        "Compressed dependencies",
        "Packaged dependencies",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "dependencies",
      hint: "These dependencies are included when the package is published",
    },
    {
      question: "How do you create a scoped package?",
      options: ["@scope/package-name", "scope/package-name", "scope:package-name", "scope.package-name"],
      correct: 0,
      difficulty: "advanced",
      type: "scoped-packages",
      hint: "Scoped packages use the @ symbol followed by scope name",
    },
    {
      question: "What is npm link used for?",
      options: [
        "Linking packages",
        "Creating symlinks for local development",
        "Linking dependencies",
        "Package linking",
      ],
      correct: 1,
      difficulty: "advanced",
      type: "linking",
      hint: "This creates symbolic links for local package development",
    },
    {
      question: "What is the purpose of .npmignore?",
      options: ["Ignores npm", "Excludes files from package", "Ignores dependencies", "Ignores scripts"],
      correct: 1,
      difficulty: "advanced",
      type: "publishing",
      hint: "This file specifies which files to exclude when publishing",
    },
    {
      question: "How do you configure npm to use a private registry?",
      options: ["npm config set registry", "npm set registry", "npm registry set", "npm configure registry"],
      correct: 0,
      difficulty: "advanced",
      type: "configuration",
      hint: "Use npm config to set the registry URL",
    },
  ],
}
